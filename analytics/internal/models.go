// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package internal

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"

	"github.com/gofrs/uuid"
)

type AlertStates string

const (
	AlertStatesUnprocessed AlertStates = "unprocessed"
	AlertStatesActive      AlertStates = "active"
	AlertStatesFiring      AlertStates = "firing"
	AlertStatesSuppressed  AlertStates = "suppressed"
	AlertStatesDeleted     AlertStates = "deleted"
)

func (e *AlertStates) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AlertStates(s)
	case string:
		*e = AlertStates(s)
	default:
		return fmt.Errorf("unsupported scan type for AlertStates: %T", src)
	}
	return nil
}

type NullAlertStates struct {
	AlertStates AlertStates
	Valid       bool // Valid is true if AlertStates is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullAlertStates) Scan(value interface{}) error {
	if value == nil {
		ns.AlertStates, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.AlertStates.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullAlertStates) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.AlertStates), nil
}

type SuppressedReason string

const (
	SuppressedReasonSilenced  SuppressedReason = "silenced"
	SuppressedReasonInhibited SuppressedReason = "inhibited"
)

func (e *SuppressedReason) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = SuppressedReason(s)
	case string:
		*e = SuppressedReason(s)
	default:
		return fmt.Errorf("unsupported scan type for SuppressedReason: %T", src)
	}
	return nil
}

type NullSuppressedReason struct {
	SuppressedReason SuppressedReason
	Valid            bool // Valid is true if SuppressedReason is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullSuppressedReason) Scan(value interface{}) error {
	if value == nil {
		ns.SuppressedReason, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.SuppressedReason.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullSuppressedReason) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.SuppressedReason), nil
}

type Alert struct {
	ID          uuid.UUID
	CreatedAt   time.Time
	Fingerprint string
	Alertname   string
}

type AlertAnnotationSet struct {
	ID         uuid.UUID
	Alert      string
	Annotation uuid.UUID
}

type AlertLabelSet struct {
	ID    uuid.UUID
	Alert string
	Label uuid.UUID
}

type AlertState struct {
	ID               uuid.UUID
	CreatedAt        time.Time
	Alert            string
	State            AlertStates
	SuppressedBy     sql.NullString
	SuppressedReason NullSuppressedReason
}

type Annotation struct {
	ID    uuid.UUID
	Key   string
	Value string
}

type Label struct {
	ID    uuid.UUID
	Key   string
	Value string
}
